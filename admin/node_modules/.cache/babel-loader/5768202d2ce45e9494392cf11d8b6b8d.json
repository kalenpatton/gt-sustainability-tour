{"ast":null,"code":"var _jsxFileName = \"/Users/qinchen/Codes/gt-sustainability-tour/admin/src/Components/WithAuth.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'; // Function that protects a component by requiring authorization\n// Taken from https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0\n\nconst CHK_TKN_URL = '/checkToken';\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false\n      };\n    }\n\n    componentDidMount() {\n      // TODO: Check to make sure token is valid. For now, assume it is.\n      // fetch(CHK_TKN_URL)\n      //     .then(res => {\n      //         if (res.status === 200) {\n      //             this.setState({ loading: false });\n      //         } else {\n      //             const error = new Error(res.error);\n      //             throw error;\n      //         }\n      //     })\n      //     .catch(err => {\n      //         console.error(err);\n      //         this.setState({ loading: false, redirect: true });\n      //     });\n      this.setState({\n        loading: false\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        redirect\n      } = this.state;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ComponentToProtect, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n\n  };\n}","map":{"version":3,"sources":["/Users/qinchen/Codes/gt-sustainability-tour/admin/src/Components/WithAuth.js"],"names":["React","Component","Redirect","CHK_TKN_URL","withAuth","ComponentToProtect","constructor","state","loading","redirect","componentDidMount","setState","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;AACA;;AAEA,MAAMC,WAAW,GAAG,aAApB;AAEA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsC;AACjD,SAAO,cAAcJ,SAAd,CAAwB;AAC3BK,IAAAA,WAAW,GAAG;AACV;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,OAAO,EAAE,IADA;AAETC,QAAAA,QAAQ,EAAE;AAFD,OAAb;AAIH;;AACDC,IAAAA,iBAAiB,GAAG;AAChB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH;;AACDI,IAAAA,MAAM,GAAG;AACL,YAAM;AAAEJ,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAwB,KAAKF,KAAnC;;AACA,UAAIC,OAAJ,EAAa;AACT,eAAO,IAAP;AACH;;AACD,UAAIC,QAAJ,EAAc;AACV,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO,oBAAC,kBAAD,oBAAwB,KAAKI,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAnC0B,GAA/B;AAqCH","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// Function that protects a component by requiring authorization\n// Taken from https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0\n\nconst CHK_TKN_URL = '/checkToken';\n\nexport default function withAuth(ComponentToProtect) {\n    return class extends Component {\n        constructor() {\n            super();\n            this.state = {\n                loading: true,\n                redirect: false,\n            };\n        }\n        componentDidMount() {\n            // TODO: Check to make sure token is valid. For now, assume it is.\n\n            // fetch(CHK_TKN_URL)\n            //     .then(res => {\n            //         if (res.status === 200) {\n            //             this.setState({ loading: false });\n            //         } else {\n            //             const error = new Error(res.error);\n            //             throw error;\n            //         }\n            //     })\n            //     .catch(err => {\n            //         console.error(err);\n            //         this.setState({ loading: false, redirect: true });\n            //     });\n            this.setState({loading: false});\n        }\n        render() {\n            const { loading, redirect } = this.state;\n            if (loading) {\n                return null;\n            }\n            if (redirect) {\n                return <Redirect to=\"/login\" />;\n            }\n            return <ComponentToProtect {...this.props} />;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}