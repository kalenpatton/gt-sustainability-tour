{"ast":null,"code":"var tabbable = require('tabbable');\n\nvar xtend = require('xtend');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container = typeof element === 'string' ? doc.querySelector(element) : element;\n  var config = xtend({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true\n  }, userOptions);\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n    updateTabbableNodes();\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n    var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;\n\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n    var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;\n\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;\n\n    if (returnFocus) {\n      delay(function () {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return; // There can be only one listening focus trap at a time\n\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n\n    listeningFocusTrap = trap;\n    updateTabbableNodes(); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    delay(function () {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active || listeningFocusTrap !== trap) return;\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    listeningFocusTrap = null;\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n\n    if (!optionValue) {\n      return null;\n    }\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\"You can't have a focus-trap without at least one focusable element\");\n    }\n\n    return node;\n  } // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  } // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  } // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  function checkTab(e) {\n    updateTabbableNodes();\n\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode = tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;","map":{"version":3,"sources":["/Users/qinchen/Codes/gt-sustainability-tour/admin/node_modules/focus-trap/index.js"],"names":["tabbable","require","xtend","listeningFocusTrap","focusTrap","element","userOptions","doc","document","container","querySelector","config","returnFocusOnDeactivate","escapeDeactivates","state","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","trap","activate","deactivate","pause","unpause","activateOptions","updateTabbableNodes","activeElement","onActivate","addListeners","deactivateOptions","removeListeners","onDeactivate","undefined","returnFocus","delay","tryFocus","getInitialFocusNode","addEventListener","checkFocusIn","checkPointerDown","checkClick","checkKey","removeEventListener","getNodeForOption","optionName","optionValue","node","Error","contains","e","target","clickOutsideDeactivates","isFocusable","preventDefault","Document","stopImmediatePropagation","isEscapeEvent","isTabEvent","checkTab","shiftKey","tabbableNodes","length","focus","isSelectableInput","select","tagName","toLowerCase","key","keyCode","fn","setTimeout","module","exports"],"mappings":"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","sourcesContent":["var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n    listeningFocusTrap = trap;\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active || listeningFocusTrap !== trap) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    listeningFocusTrap = null;\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n"]},"metadata":{},"sourceType":"script"}