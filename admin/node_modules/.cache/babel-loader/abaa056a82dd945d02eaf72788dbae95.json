{"ast":null,"code":"var _jsxFileName = \"/Users/qinchen/Codes/gt-sustainability-tour/admin/src/Components/Map.js\";\nimport React from 'react';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Modal from 'react-responsive-modal';\nimport PopupWindow from './PopupWindow';\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mapHandler = {};\n\n    this.handleEditSite = site => {\n      this.onOpenModal(site);\n    };\n\n    this.handleDeleteSite = site => {};\n\n    this.onOpenModal = site => {\n      this.setState({\n        focusedSite: site,\n        isModalOpen: true\n      });\n      console.log(site);\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        isModalOpen: false\n      });\n    };\n\n    this.addMarkers = () => {\n      var markers = [];\n\n      for (var i = 0; i < this.state.sites.length; i++) {\n        let site = this.state.sites[i];\n        markers.push(React.createElement(Marker, {\n          position: site.position,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Popup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"   \", React.createElement(\"div\", {\n          className: \"center-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, site.name), React.createElement(\"button\", {\n          onClick: () => this.handleEditSite(site),\n          className: \"optionBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Edit Site\"), React.createElement(\"button\", {\n          onClick: () => this.handleDeleteSite(site),\n          className: \"optionBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Delete Site\")))));\n      }\n\n      return markers;\n    };\n\n    this.handleClick = e => {\n      console.log(e.latlng);\n    };\n\n    this.saveMap = map => {\n      this.map = map;\n      this.setState({\n        isMapInit: true\n      });\n    };\n\n    this.state = {\n      isMapInit: false,\n      showDirectionText: false,\n      isModalOpen: false,\n      // Eventually, this hard code should be replaced with a call to backend\n      sites: [{\n        name: \"Engineered Biosystems Building (EBB)\",\n        position: [33.7807, -84.3980]\n      }, {\n        name: \"Caddell Building\",\n        position: [33.77670, -84.39685]\n      }, {\n        name: \"Carbon Neutral Energy Solutions Lab (CNES)\",\n        position: [33.7709, -84.4020]\n      }, {\n        name: \"Clough Undergraduate Learning Commons\",\n        position: [33.7746, -84.3964]\n      }, {\n        name: \"Klaus Advanced Computing Building\",\n        position: [33.7771, -84.3963]\n      }, {\n        name: \"Glenn and Towers\",\n        position: [33.77326, -84.39131]\n      }, {\n        name: \"Historic Academy of Medicine\",\n        position: [33.77837, -84.38673]\n      }, {\n        name: \"Hinman Building\",\n        position: [33.77472, -84.39500]\n      }, {\n        name: \"Old Civil Engineering Building\",\n        position: [33.77414, -84.39465]\n      }, {\n        name: \"Stephen C. Hall Building\",\n        position: [33.77411, -84.39405]\n      }, {\n        name: \"Ken Byers Tennis Complex\",\n        position: [33.78118, -84.39432]\n      }, {\n        name: \"Scheller College of Business\",\n        position: [33.77635, -84.38785]\n      }, {\n        name: \"Marcus Nanotechnology Building\",\n        position: [33.77881, -84.39854]\n      }, {\n        name: \"McCamish Pavillion\",\n        position: [33.78068, -84.39278]\n      }, {\n        name: \"Zelnak Basketball Practice Facility\",\n        position: [33.77993, -84.39226]\n      }, {\n        name: \"Mewborn Field\",\n        position: [33.77928, -84.39323]\n      }, {\n        name: \"North Avenue Apartments and Dining Hall\",\n        position: [33.77091, -84.39167]\n      }, {\n        name: \"Chapin Building\",\n        position: [33.77332, -84.39527]\n      }, {\n        name: \"Fitten, Freeman, and Montag Halls\",\n        position: [33.77803, -84.40408]\n      }, {\n        name: \"Joseph B. Whitehead Student Health Center\",\n        position: [33.77480, -84.40287]\n      }, {\n        name: \"Campus Recreation Center (CRC)\",\n        position: [33.77549, -84.40344]\n      }, {\n        name: \"Mason Building\",\n        position: [33.77663, -84.39884]\n      }],\n      //the site currently in focus in the popup window\n      focusedSite: null\n    };\n    this.state.focusedSite = this.state.sites[0];\n  } // Object that contains methods to edit the map. Can be passed to children\n  // components, like the popup window.\n\n\n  render() {\n    return React.createElement(LeafletMap // This is the default lon and lat of GT\n    , {\n      center: [33.775620, -84.396286],\n      zoom: 17,\n      maxZoom: 19,\n      minZoom: 14,\n      attributionControl: true,\n      zoomControl: true,\n      doubleClickZoom: true,\n      scrollWheelZoom: true,\n      dragging: true,\n      animate: true,\n      easeLinearity: 0.35,\n      onClick: this.handleClick,\n      ref: this.saveMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 OpenStreetMap contributors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), this.addMarkers(), React.createElement(Modal, {\n      open: this.state.isModalOpen,\n      onClose: this.onCloseModal,\n      className: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(PopupWindow, {\n      site: this.state.focusedSite,\n      mapHandler: this.mapHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/qinchen/Codes/gt-sustainability-tour/admin/src/Components/Map.js"],"names":["React","Map","LeafletMap","TileLayer","Marker","Popup","Modal","PopupWindow","Component","constructor","props","mapHandler","handleEditSite","site","onOpenModal","handleDeleteSite","setState","focusedSite","isModalOpen","console","log","onCloseModal","addMarkers","markers","i","state","sites","length","push","position","name","handleClick","e","latlng","saveMap","map","isMapInit","showDirectionText","render"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { Map as LeafletMap, TileLayer, Marker ,Popup} from 'react-leaflet';\nimport Modal from 'react-responsive-modal';\nimport PopupWindow from './PopupWindow';\n\nclass Map extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMapInit : false,\n            showDirectionText: false,\n            isModalOpen : false,\n            // Eventually, this hard code should be replaced with a call to backend\n            sites : [\n                { name:\"Engineered Biosystems Building (EBB)\", position:[33.7807, -84.3980] },\n                { name:\"Caddell Building\", position:[33.77670, -84.39685] },\n                { name:\"Carbon Neutral Energy Solutions Lab (CNES)\", position:[33.7709, -84.4020] },\n                { name:\"Clough Undergraduate Learning Commons\", position:[33.7746, -84.3964] },\n                { name:\"Klaus Advanced Computing Building\", position:[33.7771, -84.3963] },\n                { name:\"Glenn and Towers\", position:[33.77326, -84.39131] },\n                { name:\"Historic Academy of Medicine\", position:[33.77837, -84.38673] },\n                { name:\"Hinman Building\", position:[33.77472, -84.39500] },\n                { name:\"Old Civil Engineering Building\", position:[33.77414, -84.39465] },\n                { name:\"Stephen C. Hall Building\", position:[33.77411, -84.39405] },\n                { name:\"Ken Byers Tennis Complex\", position:[33.78118, -84.39432] },\n                { name:\"Scheller College of Business\", position:[33.77635, -84.38785] },\n                { name:\"Marcus Nanotechnology Building\", position:[33.77881, -84.39854] },\n                { name:\"McCamish Pavillion\", position:[33.78068, -84.39278] },\n                { name:\"Zelnak Basketball Practice Facility\", position:[33.77993, -84.39226] },\n                { name:\"Mewborn Field\", position:[33.77928, -84.39323] },\n                { name:\"North Avenue Apartments and Dining Hall\", position:[33.77091, -84.39167] },\n                { name:\"Chapin Building\", position:[33.77332, -84.39527] },\n                { name:\"Fitten, Freeman, and Montag Halls\", position:[33.77803, -84.40408] },\n                { name:\"Joseph B. Whitehead Student Health Center\", position:[33.77480, -84.40287] },\n                { name:\"Campus Recreation Center (CRC)\", position:[33.77549, -84.40344] },\n                { name:\"Mason Building\", position:[33.77663, -84.39884] }\n\n            ],\n\n            //the site currently in focus in the popup window\n            focusedSite : null\n        };\n\n        this.state.focusedSite = this.state.sites[0];\n    }\n\n    // Object that contains methods to edit the map. Can be passed to children\n    // components, like the popup window.\n    mapHandler = {\n\n    };\n\n    handleEditSite = (site) => {\n        this.onOpenModal(site);\n    };\n\n    handleDeleteSite = (site) => {\n\n    };\n\n    onOpenModal = (site) => {\n        this.setState({\n            focusedSite: site,\n            isModalOpen: true\n        });\n        console.log(site);\n    };\n\n    onCloseModal = () => {\n        this.setState({ isModalOpen: false });\n    };\n\n    // Returns UI elements for all site markers\n    addMarkers = () => {\n        var markers = [];\n        for (var i=0; i<this.state.sites.length; i++) {\n            let site = this.state.sites[i];\n            markers.push(\n                <Marker position={site.position} key={i}>\n                    <Popup>   {/* Popup for any custom information. */}\n                        <div className=\"center-text\">\n                            <p>{site.name}</p>\n                            <button\n                                onClick={() => this.handleEditSite(site)}\n                                className=\"optionBtn\">\n                                Edit Site\n                            </button>\n                            <button\n                                onClick={() => this.handleDeleteSite(site)}\n                                className=\"optionBtn\">\n                                Delete Site\n                            </button>\n                        </div>\n                    </Popup>\n                </Marker>\n            );\n        }\n        return markers\n    };\n\n    // What to do when the map is clicked\n    handleClick = (e) => {\n        console.log(e.latlng);\n    }\n\n    // saves the map to this.map. Used for objects which need the map opject\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        });\n    }\n\n    render() {\n        return (\n            <LeafletMap\n            // This is the default lon and lat of GT\n                        center={[33.775620, -84.396286]}\n                        zoom={17}\n                        maxZoom={19}\n                        minZoom={14}\n                        attributionControl={true}\n                        zoomControl={true}\n                        doubleClickZoom={true}\n                        scrollWheelZoom={true}\n                        dragging={true}\n                        animate={true}\n                        easeLinearity={0.35}\n                        onClick={this.handleClick}\n                        ref={this.saveMap}\n            >\n                <TileLayer\n                    url='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n                    attribution='© OpenStreetMap contributors'\n                />\n\n                {/* Add a bunch of things to the map here */}\n                {this.addMarkers()}\n\n                {/* https://github.com/reactjs/react-modal */}\n                <Modal\n                    open={this.state.isModalOpen}\n                    onClose={this.onCloseModal}\n                    className=\"centered\">\n                    <PopupWindow\n                        site = {this.state.focusedSite}\n                        mapHandler = {this.mapHandler}/>\n                </Modal>\n            </LeafletMap>\n        );\n    }\n}\nexport default Map;"]},"metadata":{},"sourceType":"module"}